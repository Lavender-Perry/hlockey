#!/usr/bin/env ruby

# frozen_string_literal: true

require('hlockey')

def menu_input(default, *choices)
  puts('Please enter a number...')
  # Adding 1 to i when printing choices
  # to avoid confusing a non-numerical input with the first choice
  choices.each_with_index { |choice, i| puts("#{(i + 1).to_s.rjust(2)} - #{choice}") }
  puts("anything else - #{default}")

  # Subtract 1 here to undo adding 1 earlier
  gets.to_i - 1
end

# Each element from choices should implement to_s
def menu_input_elem(default, choices)
  i = menu_input(default, *choices)
  choices[i] unless i.negative?
end

puts('Please wait...')

PRINT_TEAM_WIN_LOSS = Proc.new do |team|
  puts("  #{team.name_with_emoji.ljust(26)} #{team.wins}-#{team.losses}")
end
PRINT_TEAM_ROSTER = Proc.new do |team|
  puts(team.name_with_emoji)
  team.roster.each do |pos, player|
    puts("  #{pos.to_s.ljust(6)}: #{player}")
    player.stats.each { |stat, value| puts("    #{stat}: #{value.round(1)}") }
  end
end

league = Hlockey::League.new

if Time.now < league.start_time
  puts(
    league.start_time.strftime("Season #{Hlockey::VERSION} starts at %H:%M, %A, %B %d.")
  )
end

loop do
  league.update_state

  puts("Season #{Hlockey::VERSION} day #{league.day}")

  case menu_input('Exit', 'Games', 'Standings', 'Rosters', 'Election', 'Information')
  when 0 # Games
    if league.games_in_progress.empty?
      puts('There are currently no games being played.')
      next
    end

    game = menu_input_elem('Back', league.games_in_progress)
    next if game.nil?

    puts("#{game.home.emoji} #{game} #{game.away.emoji}")
    loop do
      league.update_state

      game.stream.each(&method(:puts))

      break unless game.in_progress

      game.stream.clear
      sleep(5)
    end
  when 1 # Standings
    if league.champion_team
      puts("Your season #{Hlockey::VERSION} champions are the #{league.champion_team}!")
    elsif league.playoff_teams
      puts('Playoffs')
      league.playoff_teams.each(&PRINT_TEAM_WIN_LOSS)
    end

    league.divisions.each do |name, teams|
      puts(name)
      teams.each(&PRINT_TEAM_WIN_LOSS)
    end
  when 2 # Rosters
    team = menu_input_elem('All teams', league.teams)

    if team.nil?
      league.teams.each(&PRINT_TEAM_ROSTER)
      next
    end
    PRINT_TEAM_ROSTER.call(team)
  when 3 # Election
    election = Hlockey.load_data('election')
    election[:categories].each do |category, options|
      puts(category)
      options.each { |name, description| puts("  #{name}: #{description}") }
    end
    puts("Go to #{election[:form]} to vote.\n"\
         "If you don't want to use Google Forms, DM me on Discord (Lavender#9223).")
  when 4 # Information
    Hlockey.load_data('information').each do |title, info|
      puts(title)
      if info.class == Hash
        info.each { |k, v| puts("  #{k}: #{v}") }
      else
        info.each_line { |l| puts("  #{l}") }
      end
    end
  else
    exit
  end
end
